# Generated by Django 4.2.17 on 2025-01-07 10:47

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import userservice.enums


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Calisan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('departman', models.CharField(blank=True, max_length=100)),
                ('izin_hakki', models.PositiveIntegerField(default=15)),
                ('kullanilan_izin', models.PositiveIntegerField(default=0)),
                ('sonraki_dönem_kullanilan_izin', models.PositiveIntegerField(default=0)),
                ('izinli', models.BooleanField(default=False)),
                ('izin_ceza', models.PositiveIntegerField(default=0)),
                ('gec_biriken', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Izin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('onay', models.CharField(auto_created=True, choices=[('INITIATED', 'INITIATED'), ('APPROVED', 'APPROVED'), ('DENIED', 'DENIED'), ('CANCELLED', 'CANCELLED')], default=userservice.enums.IzinStatus['INITIATED'], max_length=255)),
                ('izin_baslangic', models.DateField(default=django.utils.timezone.now)),
                ('izin_bitis', models.DateField(default=datetime.datetime(2025, 1, 8, 10, 47, 7, 938895))),
                ('zaruri', models.BooleanField(default=False)),
                ('gerekce', models.CharField(blank=True, max_length=255)),
                ('olusturulma_zamani', models.DateTimeField(auto_now_add=True)),
                ('calisan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'İzin',
                'verbose_name_plural': 'İzinler',
            },
        ),
        migrations.CreateModel(
            name='CalisanGiris',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('giris_zamani', models.DateTimeField(verbose_name='Giriş Zamanı')),
                ('ilk_giris', models.BooleanField()),
                ('calisan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Çalışan')),
            ],
            options={
                'verbose_name': 'Calisan Giris',
                'verbose_name_plural': 'Calisan Girisleri',
            },
        ),
        migrations.CreateModel(
            name='Bildirim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(default='', max_length=255)),
                ('calisan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bildirim',
                'verbose_name_plural': 'Bildirimler',
            },
        ),
    ]
